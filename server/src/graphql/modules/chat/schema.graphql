type Message {
  id: ID!
  user: User!
  content: String!
  createdAt: DateTime!
}

type Chat {
  id: ID!
  users: [User!]
  messages: [Message!]
}

type Query {
  messages(data: MessagesInput): MessagesResponse!
}

type Mutation {
  createChat(data: CreateChatInput): CreateChatResponse
  createMessage(data: CreateMessageInput): Boolean!
}

type Subscription {
  newMessages(data: NewMessageInput): Message!
}

type MessagesResponse {
  chat: Chat
  errors: [Error!]
}

type CreateChatResponse {
  chat: Chat
  errors: [Error!]
}

input MessagesInput {
  chatId: Int!
}

input CreateChatInput {
  otherUsername: String!
}

input CreateMessageInput {
  chatId: Int!
  content: String!
}

input NewMessageInput {
  chatId: Int!
}
